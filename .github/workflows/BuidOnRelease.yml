name: Build On Release

on:
  release:
    types: [published]

jobs:
  build-and-upload:
    name: Generate And Upload Build Files
    runs-on: ubuntu-latest
    container: unityci/editor:ubuntu-2020.3.11f1-base-0.13.0
    env:
      DOTNET_ROOT: '/opt/unity/Editor/Data/NetCore/Sdk-2.2.107'

    steps:
      - name: Activate unity
        # exit code is 1 for manual activation
        continue-on-error: true
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        run: |          
          echo "$UNITY_LICENSE" | tr -d '\r' > UnityLicenseFile.ulf
          unity-editor -nographics -logFile /dev/stdout -manualLicenseFile UnityLicenseFile.ulf -quit | echo "Activation finished"

      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Cache Library
        id: cache-library
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-2020.3.11

      - name: Install zip
        run: |
          apt update && apt install sudo
          sudo apt-get install -y zip

      - name: Generate Builds
        run: |
          chmod +x generateBuilds.sh
          ./generateBuilds.sh unity-editor
          export LINUX_BUILD_NAME=$(ls Build/*Linux.zip | sed -e 's/Build\///')
          echo "LINUX_BUILD_NAME=$LINUX_BUILD_NAME" >> $GITHUB_ENV
          export WINDOWS_BUILD_NAME=$(ls Build/*Windows.zip | sed -e 's/Build\///')
          echo "WINDOWS_BUILD_NAME=$WINDOWS_BUILD_NAME" >> $GITHUB_ENV
          export WEB_BUILD_NAME=$(ls Build/*Web.zip | sed -e 's/Build\///')
          echo "WEB_BUILD_NAME=$WEB_BUILD_NAME" >> $GITHUB_ENV

      - name: Upload Linux Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./Build/${{ env.LINUX_BUILD_NAME }}
          asset_name: ${{ env.LINUX_BUILD_NAME }}
          asset_content_type: application/zip

      - name: Upload Windows Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./Build/${{ env.WINDOWS_BUILD_NAME }}
          asset_name: ${{ env.WINDOWS_BUILD_NAME }}
          asset_content_type: application/zip

      - name: Upload Web Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./Build/${{ env.WEB_BUILD_NAME }}
          asset_name: ${{ env.WEB_BUILD_NAME }}
          asset_content_type: application/zip
